parameters:
  condition: succeeded()
  dependsOn: [ ]

jobs:
  - job: build
    displayName: 'Build Identity'
    dependsOn: ${{ parameters.dependsOn }}
    condition: ${{ parameters.condition }}
    pool:
      vmImage: "ubuntu-latest"

    steps:
      - task: UseDotNet@2
        displayName: 'Use .NET 6 SDK'
        inputs:
          packageType: sdk
          version: 6.x

      - template: build-artifact.yaml
        parameters:
          workingDirectory: 'net5/Identity'

      - powershell: |
          dotnet publish ./net5/Identity/src/Identity.Startup/ -c Release -r linux-x64 -o $(Build.ArtifactStagingDirectory)/identity
        displayName: "[Docker] Publish dotnet artifacts for app"

      - task: CopyFiles@2
        displayName: "[Docker] Copy Dockerfile"
        inputs:
          SourceFolder: 'net5/Identity'
          Contents: Dockerfile
          targetFolder: $(Build.ArtifactStagingDirectory)/identity

      - task: Docker@1
        displayName: "[Docker] Build image"
        inputs:
          azureSubscriptionEndpoint: travel-blog-service-connection
          azureContainerRegistry: travelblogacr
          dockerFile: '$(Build.ArtifactStagingDirectory)/identity/Dockerfile'
          imageName: 'identity:$(Build.BuildNumber)'
          includeLatestTag: true

      - task: AzureCLI@2
        displayName: '[Docker] Push image'
        inputs:
          azureSubscription: travel-blog-service-connection
          scriptType: bash
          scriptLocation: inlineScript
          addSpnToEnvironment: true
          inlineScript: |
              az acr login --name travelblogacr
              docker tag travelblogacr/identity:$(Build.BuildNumber) travelblogacr.azurecr.io/identity:$(Build.BuildNumber)
              docker push travelblogacr.azurecr.io/identity:$(Build.BuildNumber)

      - powershell: |
          dotnet publish ./net5/Identity/src/Identity.DataMigrator/ -c Release -r linux-x64 -o $(Build.ArtifactStagingDirectory)/data_migrator
        displayName: '[Schema] Publish dotnet artifacts for data migrator'

      - task: PublishPipelineArtifact@1
        displayName: '[Schema] Publish DataMigrator'
        inputs:
          artifactName: 'data_migrator'
          targetPath: $(Build.ArtifactStagingDirectory)/data_migrator
